syntax = "proto3";

message APIFeature {
  string type = 1;
  string api = 2;
  string description = 3;
}

message Address {
  AddressType type = 1;
  oneof value {
    Integer v = 2;
    Token_Offset token_offset = 3;
  };
}

enum AddressType {
  ADDRESSTYPE_UNSPECIFIED = 0;
  ADDRESSTYPE_ABSOLUTE = 1;
  ADDRESSTYPE_RELATIVE = 2;
  ADDRESSTYPE_FILE = 3;
  ADDRESSTYPE_DN_TOKEN = 4;
  ADDRESSTYPE_DN_TOKEN_OFFSET = 5;
  ADDRESSTYPE_NO_ADDRESS = 6;
}

message Analysis {
  string format = 1;
  string arch = 2;
  string os = 3;
  string extractor = 4;
  repeated string rules = 5;
  Address base_address = 6;
  Layout layout = 7;
  FeatureCounts feature_counts = 8;
  repeated LibraryFunction library_functions = 9;
}

message ArchFeature {
  string type = 1;
  string arch = 2;
  string description = 3;
}

message AttackSpec {
  repeated string parts = 1;
  string tactic = 2;
  string technique = 3;
  string subtechnique = 4;
  string id = 5;
}

message BasicBlockFeature {
  string type = 1;
  string description = 2;
}

message BasicBlockLayout {
  Address address = 1;
}

message BytesFeature {
  string type = 1;
  string bytes = 2;
  string description = 3;
}

message CharacteristicFeature {
  string type = 1;
  string characteristic = 2;
  string description = 3;
}

message ClassFeature {
  string type = 1;
  string description = 2;
  string class = 3;
}

message CompoundStatement {
  string type = 1;
  string description = 2;
}

message ExportFeature {
  string type = 1;
  string export = 2;
  string description = 3;
}

message FeatureCounts {
  uint64 file = 1;
  repeated FunctionFeatureCount functions = 2;
}

message FeatureNode {
  oneof feature {
    OSFeature v0 = 1;
    ArchFeature v1 = 2;
    FormatFeature v2 = 3;
    MatchFeature v3 = 4;
    CharacteristicFeature v4 = 5;
    ExportFeature v5 = 6;
    ImportFeature v6 = 7;
    SectionFeature v7 = 8;
    FunctionNameFeature v8 = 9;
    SubstringFeature v9 = 10;
    RegexFeature v10 = 11;
    StringFeature v11 = 12;
    ClassFeature v12 = 13;
    NamespaceFeature v13 = 14;
    APIFeature v14 = 15;
    PropertyFeature v15 = 16;
    NumberFeature v16 = 17;
    BytesFeature v17 = 18;
    OffsetFeature v18 = 19;
    MnemonicFeature v19 = 20;
    OperandNumberFeature v20 = 21;
    OperandOffsetFeature v21 = 22;
    BasicBlockFeature v22 = 23;
  };
  string type = 25;
}

message FormatFeature {
  string type = 1;
  string format = 2;
  string description = 3;
}

message FunctionFeatureCount {
  Address address = 1;
  uint64 count = 2;
}

message FunctionLayout {
  Address address = 1;
  repeated BasicBlockLayout matched_basic_blocks = 2;
}

message FunctionNameFeature {
  string type = 1;
  string function_name = 2;
  string description = 3;
}

message ImportFeature {
  string type = 1;
  string description = 2;
  string import = 3;
}

message Layout {
  repeated FunctionLayout functions = 1;
}

message LibraryFunction {
  Address address = 1;
  string name = 2;
}

message MBCSpec {
  repeated string parts = 1;
  string objective = 2;
  string behavior = 3;
  string method = 4;
  string id = 5;
}

message MaecMetadata {
  string analysis_conclusion = 1;
  string analysis_conclusion_ov = 2;
  string malware_family = 3;
  string malware_category = 4;
  string malware_category_ov = 5;
}

message Match {
  bool success = 1;
  oneof node {
    StatementNode v0 = 2;
    FeatureNode v1 = 3;
  };
  repeated Match children = 5;
  repeated Address locations = 6;
  map <string, Array_Address> captures = 7;
}

message MatchFeature {
  string type = 1;
  string match = 2;
  string description = 3;
}

message Metadata {
  string timestamp = 1;  // TODO Timestamp?
  string version = 2;
  repeated string argv = 3;
  Sample sample = 4;
  Analysis analysis = 5;
}

message MnemonicFeature {
  string type = 1;
  string mnemonic = 2;
  string description = 3;
}

message NamespaceFeature {
  string type = 1;
  string namespace = 2;
  string description = 3;
}

message NumberFeature {
  string type = 1;
  oneof number {
    Integer v0 = 2;
    Number v1 = 3;
  };
  string description = 5;
}

message OSFeature {
  string type = 1;
  string os = 2;
  string description = 3;
}

message OffsetFeature {
  string type = 1;
  Integer offset = 2;
  string description = 3;
}

message OperandNumberFeature {
  string type = 1;
  Integer index = 2;
  Integer operand_number = 3;
  string description = 4;
}

message OperandOffsetFeature {
  string type = 1;
  Integer index = 2;
  Integer operand_offset = 3;
  string description = 4;
}

message PropertyFeature {
  string type = 1;
  string access = 2;
  string property = 3;
  string description = 4;
}

message RangeStatement {
  string description = 1;
  uint32 min = 2;
  uint32 max = 3;
  oneof child {
    OSFeature v0 = 4;
    ArchFeature v1 = 5;
    FormatFeature v2 = 6;
    MatchFeature v3 = 7;
    CharacteristicFeature v4 = 8;
    ExportFeature v5 = 9;
    ImportFeature v6 = 10;
    SectionFeature v7 = 11;
    FunctionNameFeature v8 = 12;
    SubstringFeature v9 = 13;
    RegexFeature v10 = 14;
    StringFeature v11 = 15;
    ClassFeature v12 = 16;
    NamespaceFeature v13 = 17;
    APIFeature v14 = 18;
    PropertyFeature v15 = 19;
    NumberFeature v16 = 20;
    BytesFeature v17 = 21;
    OffsetFeature v18 = 22;
    MnemonicFeature v19 = 23;
    OperandNumberFeature v20 = 24;
    OperandOffsetFeature v21 = 25;
    BasicBlockFeature v22 = 26;
  };
  string type = 28;
}

message RegexFeature {
  string type = 1;
  string regex = 2;
  string description = 3;
}

message ResultDocument {
  Metadata meta = 1;
  map <string, RuleMatches> rules = 2;
}

message RuleMatches {
  RuleMetadata meta = 1;
  string source = 2;
  repeated Pair_Address_Match matches = 3;
}

message RuleMetadata {
  string name = 1;
  string namespace = 2;
  repeated string authors = 3;
  Scope scope = 4;
  repeated AttackSpec attack = 5;
  repeated MBCSpec mbc = 6;
  repeated string references = 7;
  repeated string examples = 8;
  string description = 9;
  bool lib = 10;
  MaecMetadata maec = 11;
  bool capa_subscope = 12;
}

message Sample {
  string md5 = 1;
  string sha1 = 2;
  string sha256 = 3;
  string path = 4;
}

enum Scope {
  SCOPE_UNSPECIFIED = 0;
  SCOPE_FILE = 1;
  SCOPE_FUNCTION = 2;
  SCOPE_BASIC_BLOCK = 3;
  SCOPE_INSTRUCTION = 4;
}

message SectionFeature {
  string type = 1;
  string section = 2;
  string description = 3;
}

message SomeStatement {
  string description = 1;
  uint32 count = 2;
  string type = 3;
}

message StatementNode {
  oneof statement {
    RangeStatement v0 = 1;
    SomeStatement v1 = 2;
    SubscopeStatement v2 = 3;
    CompoundStatement v3 = 4;
  };
  string type = 6;
}

message StringFeature {
  string type = 1;
  string string = 2;
  string description = 3;
}

message SubscopeStatement {
  string description = 1;
  Scope scope = 2;
  string type = 3;
}

message SubstringFeature {
  string type = 1;
  string substring = 2;
  string description = 3;
}

message Array_Address { repeated Address values = 1; }

message Pair_Address_Match {
  Address v0 = 1;
  Match v1 = 2;
}

message Token_Offset {
  Integer token = 1;
  uint64 offset = 2;  // offset is always >= 0
}

message Integer { oneof value { uint64 u = 1; sint64 i = 2; } }  // unsigned or unsigned int

message Number { oneof value { uint64 u = 1; sint64 i = 2; double f = 3; } }
